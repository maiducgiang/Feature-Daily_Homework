// Generated by data binding compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.myapplication.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityMainBinding extends ViewDataBinding {
  @NonNull
  public final Button buttonMainNextscreen;

  @NonNull
  public final EditText edittextMainName;

  @NonNull
  public final EditText edittextMainSchedule;

  @NonNull
  public final RadioButton radioButtonMainF0;

  @NonNull
  public final RadioButton radioButtonMainF1;

  @NonNull
  public final RadioButton radioButtonMainNo;

  @NonNull
  public final RadioGroup radiogroupMainContact;

  @NonNull
  public final TextView textViewMainContact;

  @NonNull
  public final TextView textViewMainName;

  @NonNull
  public final TextView textViewMainSchedule;

  protected ActivityMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button buttonMainNextscreen, EditText edittextMainName, EditText edittextMainSchedule,
      RadioButton radioButtonMainF0, RadioButton radioButtonMainF1, RadioButton radioButtonMainNo,
      RadioGroup radiogroupMainContact, TextView textViewMainContact, TextView textViewMainName,
      TextView textViewMainSchedule) {
    super(_bindingComponent, _root, _localFieldCount);
    this.buttonMainNextscreen = buttonMainNextscreen;
    this.edittextMainName = edittextMainName;
    this.edittextMainSchedule = edittextMainSchedule;
    this.radioButtonMainF0 = radioButtonMainF0;
    this.radioButtonMainF1 = radioButtonMainF1;
    this.radioButtonMainNo = radioButtonMainNo;
    this.radiogroupMainContact = radiogroupMainContact;
    this.textViewMainContact = textViewMainContact;
    this.textViewMainName = textViewMainName;
    this.textViewMainSchedule = textViewMainSchedule;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, null, false, component);
  }

  public static ActivityMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityMainBinding)bind(component, view, R.layout.activity_main);
  }
}
